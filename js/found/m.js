// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['lib/backbone'], function(Backbone) {
  var M;
  M = (function(superClass) {
    extend(M, superClass);

    function M() {
      return M.__super__.constructor.apply(this, arguments);
    }

    return M;

  })(Backbone.Model);
  return M;
});
